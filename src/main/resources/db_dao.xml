<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task-4.1.xsd"
        xmlns:task="http://www.springframework.org/schema/task">
 
    <!-- 主库数据源 -->
    <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${spring.datasource.driverClassName}"/>
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
    </bean>
 
    <!-- 从库数据源 -->
    <bean id="secondDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${spring.datasource.driverClassName}"/>
        <property name="url" value="${second.datasource.url}"/>
        <property name="username" value="${second.datasource.username}"/>
        <property name="password" value="${second.datasource.password}"/>
        
    </bean>

    <bean id="dataSource" class="com.my.dbfilter.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="master" value-ref="masterDataSource"/>
                <entry key="second" value-ref="secondDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>

    <!-- 启用annotation方式 -->
    <task:annotation-driven scheduler="myScheduler" />

    <!-- 配置任务线程池 -->
    <task:scheduler id="myScheduler" pool-size="5" />
    
</beans>